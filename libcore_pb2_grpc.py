# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import libcore_pb2 as libcore__pb2


class LibcoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Exit = channel.unary_unary(
                '/libcore.LibcoreService/Exit',
                request_serializer=libcore__pb2.EmptyReq.SerializeToString,
                response_deserializer=libcore__pb2.EmptyResp.FromString,
                )
        self.Update = channel.unary_unary(
                '/libcore.LibcoreService/Update',
                request_serializer=libcore__pb2.UpdateReq.SerializeToString,
                response_deserializer=libcore__pb2.UpdateResp.FromString,
                )
        self.Start = channel.unary_unary(
                '/libcore.LibcoreService/Start',
                request_serializer=libcore__pb2.LoadConfigReq.SerializeToString,
                response_deserializer=libcore__pb2.ErrorResp.FromString,
                )
        self.Stop = channel.unary_unary(
                '/libcore.LibcoreService/Stop',
                request_serializer=libcore__pb2.EmptyReq.SerializeToString,
                response_deserializer=libcore__pb2.ErrorResp.FromString,
                )
        self.Test = channel.unary_unary(
                '/libcore.LibcoreService/Test',
                request_serializer=libcore__pb2.TestReq.SerializeToString,
                response_deserializer=libcore__pb2.TestResp.FromString,
                )
        self.QueryStats = channel.unary_unary(
                '/libcore.LibcoreService/QueryStats',
                request_serializer=libcore__pb2.QueryStatsReq.SerializeToString,
                response_deserializer=libcore__pb2.QueryStatsResp.FromString,
                )
        self.ListConnections = channel.unary_unary(
                '/libcore.LibcoreService/ListConnections',
                request_serializer=libcore__pb2.EmptyReq.SerializeToString,
                response_deserializer=libcore__pb2.ListConnectionsResp.FromString,
                )


class LibcoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Exit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Test(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibcoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Exit': grpc.unary_unary_rpc_method_handler(
                    servicer.Exit,
                    request_deserializer=libcore__pb2.EmptyReq.FromString,
                    response_serializer=libcore__pb2.EmptyResp.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=libcore__pb2.UpdateReq.FromString,
                    response_serializer=libcore__pb2.UpdateResp.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=libcore__pb2.LoadConfigReq.FromString,
                    response_serializer=libcore__pb2.ErrorResp.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=libcore__pb2.EmptyReq.FromString,
                    response_serializer=libcore__pb2.ErrorResp.SerializeToString,
            ),
            'Test': grpc.unary_unary_rpc_method_handler(
                    servicer.Test,
                    request_deserializer=libcore__pb2.TestReq.FromString,
                    response_serializer=libcore__pb2.TestResp.SerializeToString,
            ),
            'QueryStats': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryStats,
                    request_deserializer=libcore__pb2.QueryStatsReq.FromString,
                    response_serializer=libcore__pb2.QueryStatsResp.SerializeToString,
            ),
            'ListConnections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnections,
                    request_deserializer=libcore__pb2.EmptyReq.FromString,
                    response_serializer=libcore__pb2.ListConnectionsResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'libcore.LibcoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LibcoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Exit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/Exit',
            libcore__pb2.EmptyReq.SerializeToString,
            libcore__pb2.EmptyResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/Update',
            libcore__pb2.UpdateReq.SerializeToString,
            libcore__pb2.UpdateResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/Start',
            libcore__pb2.LoadConfigReq.SerializeToString,
            libcore__pb2.ErrorResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/Stop',
            libcore__pb2.EmptyReq.SerializeToString,
            libcore__pb2.ErrorResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/Test',
            libcore__pb2.TestReq.SerializeToString,
            libcore__pb2.TestResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/QueryStats',
            libcore__pb2.QueryStatsReq.SerializeToString,
            libcore__pb2.QueryStatsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libcore.LibcoreService/ListConnections',
            libcore__pb2.EmptyReq.SerializeToString,
            libcore__pb2.ListConnectionsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
